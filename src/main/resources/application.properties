application.message: Hello
#spring.datasource.url =jdbc:h2:tcp://localhost/c:/h2/aquila_monitor;DB_CLOSE_ON_EXIT=FALSE\
spring.datasource.url =jdbc:h2:~/h2/db/aquila_monitor;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = sa
spring.datasource.password =
spring.datasource.driver-class-name=org.h2.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
spring.h2.console.enabled=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create-drop



# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/system_monitor
#spring.datasource.username = root
#spring.datasource.password = admin
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create

# Naming strategy
###spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


# Email (MailProperties)
#spring.mail.host=xxxxx.xxxx.bel.tr
#spring.mail.port= # mail server port
#spring.mail.username=xxxx@xxxxx.bel.tr	
#spring.mail.password=xxxxxxx
#spring.mail.default-encoding=UTF-8 # encoding to use for MimeMessages
#spring.mail.properties.*= # properties to set on the JavaMail session
#spring.datasource.schema=system_monitor

# HTTP encoding (HttpEncodingProperties)
#spring.http.encoding.charset=UTF-8 # the encoding of HTTP requests/responses
#spring.http.encoding.enabled=true # enable http encoding support
#spring.http.encoding.force=true # force the configured encoding
#
## HTTP message conversion
#spring.http.converters.preferred-json-mapper= # the preferred JSON mapper to use for HTTP message conversion. Set to "gson" to force the use of Gson when both it and Jackson are on the classpath.


# LOGGING
#logging.path=/var/logs
#logging.file=myapp.log
#logging.config= # location of config file (default classpath:logback.xml for logback)
#logging.level.*= # levels for loggers, e.g. "logging.level.org.springframework=DEBUG" (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)
#
## IDENTITY (ContextIdApplicationContextInitializer)
#spring.application.name=
#spring.application.index=

## EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port=1453
#server.address= # bind to a specific NIC
#server.session-timeout= # session timeout in seconds
#server.context-parameters.*= # Servlet context init parameters, e.g. server.context-parameters.a=alpha
#server.context-path= # the context path, defaults to '/'
#server.servlet-path= # the servlet path, defaults to '/'
#server.ssl.enabled=true # if SSL support is enabled
#server.ssl.client-auth= # want or need
#server.ssl.key-alias=
#server.ssl.ciphers= # supported SSL ciphers
#server.ssl.key-password=
#server.ssl.key-store=
#server.ssl.key-store-password=
#server.ssl.key-store-provider=
#server.ssl.key-store-type=
#server.ssl.protocol=TLS
#server.ssl.trust-store=
#server.ssl.trust-store-password=
#server.ssl.trust-store-provider=
#server.ssl.trust-store-type=
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.compression=off # is compression enabled (off, on, or an integer content length limit)
#server.tomcat.compressableMimeTypes=text/html,text/xml,text/plain # comma-separated list of mime types that Tomcat will compress
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#        192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
#        169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
#        127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3} # regular expression matching trusted IP addresses
#server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
#server.tomcat.port-header= # front end proxy port header
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-http-header-size= # maximum size in bytes of the HTTP message header
#server.tomcat.max-threads = 0 # number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding
#
## SPRING MVC (WebMvcProperties)
#spring.mvc.locale= # set fixed locale, e.g. en_UK
#spring.mvc.date-format= # set fixed date format, e.g. dd/MM/yyyy
#spring.mvc.favicon.enabled=true
#spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
#spring.mvc.ignore-default-model-on-redirect=true # If the the content of the "default" model should be ignored redirects
#spring.view.prefix= # MVC view prefix
#spring.view.suffix= # ... and suffix
